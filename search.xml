<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>自建V2ray服务器</title>
      <link href="/posts/2024/03/645c4c54.html"/>
      <url>/posts/2024/03/645c4c54.html</url>
      
        <content type="html"><![CDATA[<p><strong>自建v2ray教程很简单，整个教程分三步</strong>：</p><p>第一步：购买VPS服务器</p><p>第二步：一键部署VPS服务器</p><p>第三步：一键加速VPS服务器 （五合一的TCP网络加速脚本）</p><hr /><p><strong>【前言】</strong></p><p><strong>v2ray的优势</strong>：v2ray支持的传输方式有很多，包括：普通TCP、HTTP伪装、WebSocket流量、普通mKCP、mKCP伪装FaceTime通话、mKCP伪装BT下载流量、mKCP伪装微信视频流量，不同的传输方式其效果会不同，有可能会遇到意想不到的效果哦！当然国内不同的地区、不同的网络环境，效果也会不同，所以具体可以自己进行测试。现在v2ray客户端也很多了，有windows、MAC、linux和安卓版。</p><hr /><p><strong>第一步：购买VPS服务器</strong></p><p>VPS服务器需要选择国外的，首选国际知名的vultr，速度不错、稳定且性价比高，按小时计费，能够随时开通和删除服务器，新服务器即是新ip。</p><p>vultr注册地址：<a href="https://www.vultr.com/?ref=7048874">https://www.vultr.com/?ref=7048874</a> （vps最低2.5美元/月，vultr全球25个服务器位置可选，包括洛杉矶、韩国、新加坡、日本、德国、荷兰等。支持支付宝和paypal付款。）</p><p><a href="https://www.vultr.com/?ref=7048874"><img src="https://www.vultr.com/media/banners/banner_728x90.png" width="728" height="90"></a></p><p>虽然是英文界面，但是现在的浏览器都有网页翻译功能，鼠标点击右键，选择网页翻译即可翻译成中文。</p><p>注册并邮件激活账号，充值后即可购买服务器。充值方式是支付宝或paypal，使用paypal有银行卡（包括信用卡）即可。paypal注册地址：<a href="https://www.paypal.com">https://www.paypal.com</a> （paypal是国际知名的第三方支付服务商，注册一下账号，绑定银行卡即可购买国外商品）</p><hr /><p><strong>注意：2.5美元套餐只提供ipv6 ip，一般的电脑用不了，所以建议选择3.5美元及以上的套餐。</strong></p><p>vultr实际上是折算成小时来计费的，比如服务器是5美元1个月，那么每小时收费为5/30/24=0.0069美元 会自动从账号中扣费，只要保证账号有钱即可。如果你部署的服务器实测后速度不理想，你可以把它删掉（destroy），重新换个地区的服务器来部署，方便且实用。因为新的服务器就是新的ip，所以当ip被墙时这个方法很有用。当ip被墙时，为了保证新开的服务器ip和原先的ip不一样，先开新服务器，开好后再删除旧服务器即可。在账号的Billing选项里可以看到账户余额。</p><p><strong>账号充值如图</strong>：</p><p><img src="https://fastly.jsdelivr.net/gh/Alvin9999/pac2/pp100.png" alt="" /></p><p><img src="https://fastly.jsdelivr.net/gh/Alvin9999/pac2/pp101.png" alt="" /></p><p><strong>vultr改版了，最新开通服务器步骤如图</strong>：</p><p><img src="https://fastly.jsdelivr.net/gh/Alvin9999/pac2/softimag/new1.PNG" alt="" /></p><p>选择“Cloud Compute”。</p><p><img src="https://fastly.jsdelivr.net/gh/Alvin9999/pac2/softimag/new2.PNG" alt="" /></p><p>选择“Regular Performance”。如果选择这个，在下面选择具体套餐的时候，最低是3.5美元/月（也要看服务器位置），流量是500GB/月；5美元是1T流量/月。</p><span id="more"></span><p>如果选择前面3个，在下面选择具体套餐的时候，最低是6美元/月，但6美元是2T流量/月。也就是，对流量需求较高的可以选择前面3个。</p><p><img src="https://fastly.jsdelivr.net/gh/Alvin9999/pac2/softimag/new3.PNG" alt="" /></p><p>选择服务器位置。不同的服务器位置速度会有所不同，有的服务器的最低价格会不同，一般纽约等位置的价格最低，有3.5美元/月的，可根据自己的需求来选择。</p><p>电信用户推荐洛杉矶服务器；联通、移动用户推荐韩国、洛杉矶服务器。其它位置也可以尝试。</p><p><img src="https://fastly.jsdelivr.net/gh/Alvin9999/pac2/softimag/new4.PNG" alt="" /></p><p><strong>点击图中的系统名字，会弹出具体系统版本，推荐Debain10 （不要选CentOS7！）</strong></p><p><img src="https://fastly.jsdelivr.net/gh/Alvin9999/pac2/softimag/new5.PNG" alt="" /></p><p>选择服务器套餐。根据自己的需求来选择，如果服务器位置定了，套餐不影响速度，影响流量和配置，一般用的人数少，选择低配置就够了。</p><p><img src="https://fastly.jsdelivr.net/gh/Alvin9999/pac2/softimag/new6.PNG" alt="" /></p><p>关闭自动备份，这个是收费的，可以关闭它。</p><p><img src="https://fastly.jsdelivr.net/gh/Alvin9999/pac2/softimag/new7.PNG" alt="" /></p><p>最后点击“Deploy Now”开始部署，等2~3分钟就差不多了。此时也会收到vultr官方发来的“Cloud Server Activated”邮件提醒。</p><p><strong>完成购买后，找到系统的密码记下来，部署服务器时需要用到。vps系统的密码获取方法如下图：</strong></p><p><img src="https://fastly.jsdelivr.net/gh/Alvin9999/crp_up/pac%E6%95%99%E7%A8%8B05.png" alt="" /></p><p><img src="https://fastly.jsdelivr.net/gh/Alvin9999/PAC/ss/Debian2.png" alt="" /></p><p><strong>删掉服务器步骤如下图</strong>：</p><p>删除服务器时，先开新的服务器后再删除旧服务器，这样可以保证新服务器的ip与旧ip不同。</p><p><img src="https://fastly.jsdelivr.net/gh/Alvin9999/PAC/ss/de4.PNG" alt="" /></p><p><img src="https://fastly.jsdelivr.net/gh/Alvin9999/PAC/ss/de2.PNG" alt="" /></p><p><img src="https://fastly.jsdelivr.net/gh/Alvin9999/PAC/ss/de5.png" alt="" /></p><hr /><p><strong>第二步：部署VPS服务器</strong></p><p>购买服务器后，需要部署一下。因为你买的是虚拟东西，而且又远在国外，我们需要一个叫Xshell的软件来远程部署。Xshell windows版下载地址：</p><p><a href="https://d2.freessr2.xyz/Xshell_setup_wm.exe">国外云盘1下载</a><br /><a href="https://d.ssrfree4.xyz/Xshell_setup_wm.exe">国外云盘2下载</a></p><p>如果你是Mac苹果电脑操作系统，更简单，无需下载xshell，系统可以直接连接VPS。直接打开Terminal终端，输入：ssh <a href="mailto:root@43.45.43.21">root@43.45.43.21</a>（将45.45.43.21换成你的IP），之后输入你的密码就可以登录了（输入密码的时候屏幕上不会有显示）</p><p><img src="https://fastly.jsdelivr.net/gh/Alvin9999/pac2/Mac.png" alt="" /></p><p>如果不能用Mac自带的终端连接的话，直接网上搜“Mac连接SSH的软件”，有很多，然后通过软件来连接vps服务器就行，具体操作方式参考windows xshell。Mac成功连接vps后剩下的操作和windows一样。</p><hr /><p>部署教程：</p><p>下载windows xshell软件并安装后，打开软件</p><p><img src="https://fastly.jsdelivr.net/gh/Alvin9999/PAC/xshell11.png" alt="" /></p><p>选择文件，新建</p><p><img src="https://fastly.jsdelivr.net/gh/Alvin9999/PAC/xshell12.png" alt="" /></p><p>随便取个名字，然后把你的服务器ip填上</p><p><img src="https://fastly.jsdelivr.net/gh/Alvin9999/PAC/xshell13.png" alt="" /></p><p>连接国外ip即服务器时，软件会先后提醒你输入用户名和密码，用户名默认都是root，密码是你购买的服务器系统的密码。</p><p><strong>如果xshell连不上服务器，没有弹出让你输入用户名和密码的输入框，表明你开到的ip是一个被墙的ip，遇到这种情况，重新开新的服务器，直到能用xshell连上为止，耐心点哦！如果同一个地区开了多台服务器还是不行的话，可以换其它地区。</strong></p><p><img src="https://fastly.jsdelivr.net/gh/Alvin9999/PAC/xshell14.png" alt="" /></p><p><img src="https://fastly.jsdelivr.net/gh/Alvin9999/PAC/ss/xshell2.png" alt="" /></p><p>连接成功后，会出现如上图所示，之后就可以复制粘贴代码部署了。</p><p><strong>Ubuntu 16+ / Debian 8+ 系统 v2ray一键部署管理脚本</strong>：</p><p>安装命令：</p><p>source &lt;(curl -sL <a href="https://multi.netlify.app/v2ray.sh">https://multi.netlify.app/v2ray.sh</a>) --zh</p><p>升级命令(保留配置文件更新)：</p><p>source &lt;(curl -sL <a href="https://multi.netlify.app/v2ray.sh">https://multi.netlify.app/v2ray.sh</a>) -k</p><p>卸载命令：</p><p>source &lt;(curl -sL <a href="https://multi.netlify.app/v2ray.sh">https://multi.netlify.app/v2ray.sh</a>) --remove</p><blockquote><p>如果输入安装命令后提示curl: command not found，那是因为服务器系统没有自带curl命令，安装一下curl。</p></blockquote><blockquote><p>CentOS系统安装curl命令：yum install -y curl</p></blockquote><blockquote><p>Debian/Ubuntu系统安装curl命令：apt-get install -y curl</p></blockquote><blockquote><p>安装完成后，输入v2ray可进入管理页面。脚本来自<a href="https://github.com/Jrohy/multi-v2ray">Jrohy/multi-v2ray</a>。</p></blockquote><hr /><p><strong>脚本演示</strong></p><p>复制上面安装命令代码到VPS服务器里，复制代码用鼠标右键的复制，然后在vps里面右键粘贴进去，因为ctrl+c和ctrl+v无效。接着输入数字1来安装。安装完成后，如果想修改、查看配置等，可以输入v2ray进行管理页面，不用重复安装脚本。</p><p><img src="https://fastly.jsdelivr.net/gh/Alvin9999/PAC/v2ray/v2ray-2-1.PNG" alt="" /></p><p><img src="https://fastly.jsdelivr.net/gh/Alvin9999/PAC/v2ray/v2ray-2-2.PNG" alt="" /></p><p>安装速度很快，安装结束后默认有个kcp协议帐号，如果不想用kcp协议，可以输入v2ray管理页面来进行传输方式的更改。（推荐websocket协议）</p><p><img src="https://fastly.jsdelivr.net/gh/Alvin9999/PAC/v2ray/v2ray-2-3.PNG" alt="" /></p><p><img src="https://fastly.jsdelivr.net/gh/Alvin9999/PAC/v2ray/v2ray-2-4.PNG" alt="" /></p><p><img src="https://fastly.jsdelivr.net/gh/Alvin9999/pac2/softimag/v2ray-cs.png" alt="" /></p><p><strong>注意：如果安装后提示“Failed to start V2Ray Service”，即v2ray无法启动成功，输入以下3条命令</strong>：</p><blockquote><p>sed -i “s/v2ray -config/v2ray run -config/g” /etc/systemd/system/v2ray.service.d/10-donot_touch_single_conf.conf</p></blockquote><blockquote><p>systemctl daemon-reload</p></blockquote><blockquote><p>systemctl restart v2ray</p></blockquote><p>如果以上命令还是无法启动，将服务器的v2ray版本退回到指定版本，输入命令：</p><blockquote><p>v2ray update v4.45.2</p></blockquote><blockquote><p>之后再重启下v2ray就可以了: 输入命令v2ray–数字1服务管理–数字3重启服务</p></blockquote><hr /><p><strong>如果选择的是CentOS系统，还需要关闭vps防火墙来开放端口，相关命令如下：</strong></p><p><strong>查看防火墙状态命令</strong>：firewall-cmd --state</p><p><strong>停止firewall命令</strong>：systemctl stop firewalld.service</p><p><strong>禁止firewall开机启动命令</strong>：systemctl disable firewalld.service</p><hr /><p><strong>注意：账号无法使用，可能原因：客户端与服务端的设备系统时间相差过大。解决方法如下：</strong></p><p><strong>1、一般国外的VPS的镜像都是默认的国外时区，使用起来不是很方便。可以把它修改成北京时间，就会方便很多。</strong><br /><strong>修改中国时区代码如下</strong>：</p><p>\cp -f /usr/share/zoneinfo/Asia/Shanghai /etc/localtime</p><p><strong>2、利用NTP同步时间协议</strong></p><p><strong>CentOS系统先安装NTP</strong>：yum install ntp ntpdate -y</p><blockquote><p>如果是Ubuntu/Debian系统执行下面2条命令来安装NTP</p></blockquote><blockquote><p>apt-get update</p></blockquote><blockquote><p>apt-get install ntp ntpdate -y</p></blockquote><p><strong>安装NTP后，按照顺序依次执行以下3条命令，分别是停止NTP服务、同步NTP时间、启动NTP服务</strong>：</p><p>service ntpd stop</p><p>ntpdate <a href="http://us.pool.ntp.org">us.pool.ntp.org</a></p><p>service ntpd start</p><p><strong>执行完成后，VPS上就是相对精确的时间设置了。很多依赖于系统时间的应用程序也就能正常工作了。注意：当vps重启后输入date来检查下时间，如果时间不是最新的，再执行以上3条命令即可。</strong></p><blockquote><p>除了通过NTP来同步时间以外，还可以手动修改vps系统时间，需要先修改中国时区，之后输入时间命令，格式（数字改为和自己电脑时间一致，误差30秒以内）：date -s “2020-2-02 19:14:00”</p></blockquote><hr /><p><strong>第三步：一键加速VPS服务器</strong></p><p>五合一的TCP网络加速脚本，包括了BBR原版、BBR魔改版、暴力BBR魔改版、BBR plus（首选）、Lotsever(锐速)安装脚本。可用于KVMXen架构，不兼容OpenVZ（OVZ）。支持Centos 6+ / Debian 7+ / Ubuntu 14+，BBR魔改版不支持Debian 8。</p><hr /><p>wget -N --no-check-certificate “<a href="https://raw.githubusercontent.com/chiakge/Linux-NetSpeed/master/tcp.sh">https://raw.githubusercontent.com/chiakge/Linux-NetSpeed/master/tcp.sh</a>”</p><p>chmod +x <a href="http://tcp.sh">tcp.sh</a></p><p>./tcp.sh</p><hr /><blockquote><p>如果提示 wget: command not found 的错误，这是你的系统精简的太干净了，wget都没有安装，所以需要安装wget。CentOS系统安装wget命令： yum install -y wget Debian/Ubuntu系统安装wget命令：apt-get install -y wget</p></blockquote><p>安装完成后，脚本管理命令为：./tcp.sh</p><p><img src="https://fastly.jsdelivr.net/gh/Alvin9999/pac2/vultr/newbbr1.jpg" alt="" /></p><p>操作方法：先安装内核，重启vps让内核生效，再启动对应的加速即可。数字1的BBR/BBR魔改内核对应数字4、5、6的BBR加速、BBR魔改加速和暴力BBR魔改版加速。数字2的BBRplus内核对应数字7的BBRplus加速。数字3的锐速加速内核对应数字8的锐速加速。</p><p>以安装暴力BBR魔改版加速为例，我们先安装对应的内核，输入数字1</p><p><img src="https://fastly.jsdelivr.net/gh/Alvin9999/pac2/vultr/newbbr2.jpg" alt="" /></p><p>内核安装完成后，输入y进行重启，重启才能让内核生效</p><p><img src="https://fastly.jsdelivr.net/gh/Alvin9999/pac2/vultr/newbbr3.jpg" alt="" /></p><p>重启完成后，输入数字6来启动暴力BBR魔改版加速</p><p><img src="https://fastly.jsdelivr.net/gh/Alvin9999/pac2/vultr/newbbr4.jpg" alt="" /></p><p><img src="https://fastly.jsdelivr.net/gh/Alvin9999/pac2/vultr/newbbr5.jpg" alt="" /></p><p>输入./tcp.sh查看最终是否启动成功。</p><p>如果想换一个加速，输入数字9进行卸载加速，然后进行同样的操作，安装内核再安装对应内核的加速即可。</p><p><strong>注意：如果在安装内核环节出现这样一张图，注意选择NO</strong></p><p><img src="https://fastly.jsdelivr.net/gh/Alvin9999/pac2/vultr/newbbr6.jpg" alt="" /></p><hr /><p>【v2ray客户端下载及使用方法】</p><p><strong>客户端使用教程：<a href="https://github.com/Alvin9999/new-pac/wiki/v2ray%E5%90%84%E5%B9%B3%E5%8F%B0%E5%9B%BE%E6%96%87%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B">v2ray各平台图文使用教程</a></strong></p><p>浏览器代理设置成Socks(5) 127.0.0.1 和1080 即可通过v2ray代理上网。</p><p>谷歌浏览器chrome可配合switchyomega插件来使用，下载插件：<a href="https://github.com/atrandys/trojan/releases/download/1.0.0/SwitchyOmega_Chromium.crx">switchyomega</a></p><p>安装插件，打开chrome，打开扩展程序，将下载的插件拖动到扩展程序页面，添加到扩展。<br /><img src="https://user-images.githubusercontent.com/12132898/70548725-0461d000-1bae-11ea-9d1e-4577e36ac46e.png" alt="20181116000534" /></p><p>完成添加，会跳转到switchyomega页面，点跳过教程，然后点击proxy，如图填写，最后点击应用选项。<br /><img src="https://user-images.githubusercontent.com/12132898/70548727-04fa6680-1bae-11ea-99da-568af4fd6f5f.png" alt="20181116001438" /></p><hr /><p><strong>常见问题参考解决方法</strong>：</p><p><strong>1、账号无法使用，可能原因一：客户端与服务端的设备系统时间相差过大。</strong></p><p><strong>a、一般国外的VPS的镜像都是默认的国外时区，使用起来不是很方便。可以把它修改成北京时间，就会方便很多。</strong><br /><strong>修改中国时区代码如下</strong>：</p><p>\cp -f /usr/share/zoneinfo/Asia/Shanghai /etc/localtime</p><p><strong>b、利用NTP同步时间协议</strong></p><p><strong>CentOS系统先安装NTP</strong>：yum install ntp ntpdate -y</p><blockquote><p>如果是Ubuntu/Debian系统执行下面2条命令来安装NTP</p></blockquote><blockquote><p>apt-get update</p></blockquote><blockquote><p>apt-get install ntp ntpdate -y</p></blockquote><p><strong>安装NTP后，按照顺序依次执行以下3条命令，分别是停止NTP服务、同步NTP时间、启动NTP服务</strong>：</p><p>service ntpd stop</p><p>ntpdate <a href="http://us.pool.ntp.org">us.pool.ntp.org</a></p><p>service ntpd start</p><p><strong>执行完成后，VPS上就是相对精确的时间设置了。很多依赖于系统时间的应用程序也就能正常工作了。注意：当vps重启后输入date来检查下时间，如果时间不是最新的，再执行以上3条命令即可。</strong></p><blockquote><p>除了通过NTP来同步时间以外，还可以手动修改vps系统时间，需要先修改中国时区，之后输入时间命令，格式（数字改为和自己电脑时间一致，误差30秒以内）：date -s “2020-2-02 19:14:00”</p></blockquote><p><strong>2、账号无法使用，可能原因：vps防火墙端口没有放开或者本地电脑防火墙、杀毒软件阻挡代理软件。</strong></p><p>关闭vps防火墙即可开放所有端口，本地电脑防火墙和杀毒软件手动关闭即可。</p><p>查看防火墙状态命令：firewall-cmd --state</p><p>停止firewall命令：systemctl stop firewalld.service</p><p>禁止firewall开机启动命令：systemctl disable firewalld.service</p><p><strong>3、搭建的账号之前能用，突然不能用了，怎么解决？</strong></p><p><strong>如果ip不能ping通，xshell不能直接连接vps服务器，说明ip被墙了，需要开新服务器换ip。</strong></p><p><strong>如果ip能ping，xshell能直接连接vps服务器，说明ip没有被墙，多半是端口被封了，优先换端口。</strong></p><p><strong>如果ip和端口都没问题，可以尝试来更换传输协议，比如Websocket、TCP、mKCP等，测试哪种协议最适合自己的网络环境。</strong></p><hr /><p>有问题可以发邮件至海外邮箱kebi2014@gmail.com</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Linux下NodeJs安装</title>
      <link href="/posts/2024/03/535a1386.html"/>
      <url>/posts/2024/03/535a1386.html</url>
      
        <content type="html"><![CDATA[<h1 id="linux下nodejs的安装"><a class="markdownIt-Anchor" href="#linux下nodejs的安装"></a> <strong>LINUX下NODEJS的安装</strong></h1><h3 id="1安装weget"><a class="markdownIt-Anchor" href="#1安装weget"></a> 1.安装weget</h3><div class="highlight-wrap" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ rpm -qa|grep &quot;wget&quot;</span><br><span class="line">wget-1.14-18.el7_6.1.x86_64</span><br><span class="line">安装命令</span><br><span class="line">$ yum install -y wget</span><br><span class="line"></span><br></pre></td></tr></table></figure></div><h3 id="2安装nodejs"><a class="markdownIt-Anchor" href="#2安装nodejs"></a> 2.安装Nodejs</h3><div class="highlight-wrap" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">#安装git</span><br><span class="line">yum install git-core</span><br><span class="line"></span><br><span class="line"># 安装nvm（Node版本管理器）</span><br><span class="line">curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.0/install.sh | bash</span><br><span class="line"></span><br><span class="line"># 重新加载shell或重新启动终端</span><br><span class="line">source ~/.bashrc   # or source ~/.bash_profile, 根据你的shell来选择</span><br><span class="line"></span><br><span class="line"># 安装Node.js 12</span><br><span class="line">nvm install 12</span><br><span class="line"></span><br><span class="line"># 使用Node.js 12</span><br><span class="line">nvm use 12</span><br><span class="line"></span><br><span class="line">#建议下载Nodejs12</span><br><span class="line"># wget https://nodejs.org/dist/v12.18.3/node-v12.18.3-linux-x64.tar.xz</span><br><span class="line"></span><br></pre></td></tr></table></figure></div><h3 id="3解压安装包"><a class="markdownIt-Anchor" href="#3解压安装包"></a> 3.解压安装包</h3><div class="highlight-wrap" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># xz -d node-v12.18.3-linux-x64.tar.xz</span><br><span class="line">得到 一个包 node-v12.18.3-linux-x64.tar</span><br><span class="line"># tar -xvf node-v12.18.3-linux-x64.tar</span><br><span class="line">得到一个目录 node-v12.18.3-linux-x64,放入指定目录</span><br><span class="line">mv node-v14.15.4-linux-x64 /usr/local/node</span><br></pre></td></tr></table></figure></div><h3 id="4检查nodejs是否安装成功"><a class="markdownIt-Anchor" href="#4检查nodejs是否安装成功"></a> 4.检查Nodejs是否安装成功</h3><div class="highlight-wrap" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">切换到node bin目录 一共有三个文件 node npm  npx </span><br><span class="line"># cd /usr/local/node/bin/</span><br><span class="line">执行命令查看 node 版本</span><br><span class="line"># ./node -v</span><br><span class="line">v12.18.3</span><br><span class="line"></span><br></pre></td></tr></table></figure></div><h3 id="5配置软链-使-命令全局可用-node"><a class="markdownIt-Anchor" href="#5配置软链-使-命令全局可用-node"></a> 5.配置软链 使 命令全局可用  node</h3><div class="highlight-wrap" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">cd /usr/bin</span><br><span class="line">ln -s /usr/local/node/bin/node node</span><br><span class="line">ln -s /usr/local/node/bin/npm npm</span><br><span class="line">ln -s /usr/local/node/bin/npx npx</span><br></pre></td></tr></table></figure></div><h3 id="6备注"><a class="markdownIt-Anchor" href="#6备注"></a> 6.备注</h3><div class="highlight-wrap" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">修改软连接</span><br><span class="line">ln -snf [新的源文件或目录] [软链接文件]</span><br></pre></td></tr></table></figure></div>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hexo博客安装</title>
      <link href="/posts/2024/03/3384d767.html"/>
      <url>/posts/2024/03/3384d767.html</url>
      
        <content type="html"><![CDATA[<h1 id="hexo博客搭建"><a class="markdownIt-Anchor" href="#hexo博客搭建"></a> <strong>Hexo博客搭建</strong></h1><p><img src="https://telegraph-image.pages.dev/file/39ebb662a7f7b18be260a.jpg" alt="avatar" /></p><h3 id="1安装脚手架"><a class="markdownIt-Anchor" href="#1安装脚手架"></a> 1.安装脚手架</h3><div class="highlight-wrap" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-cli -g</span><br></pre></td></tr></table></figure></div><h3 id="2创建项目"><a class="markdownIt-Anchor" href="#2创建项目"></a> 2.创建项目</h3><div class="highlight-wrap" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ hexo init &quot;MyBlog&quot;</span><br><span class="line">$ cd MyBlog</span><br><span class="line">$ npm install</span><br></pre></td></tr></table></figure></div><h3 id="3运行"><a class="markdownIt-Anchor" href="#3运行"></a> 3.运行</h3><div class="highlight-wrap" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure></div><h3 id="4生成静态文件"><a class="markdownIt-Anchor" href="#4生成静态文件"></a> 4.生成静态文件</h3><div class="highlight-wrap" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure></div><h3 id="5备注"><a class="markdownIt-Anchor" href="#5备注"></a> 5.备注</h3><div class="highlight-wrap" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">sudo yum install epel-release</span><br><span class="line">#阻止了 Nginx 访问所需的文件和端口</span><br><span class="line">sudo setenforce 0</span><br><span class="line"></span><br><span class="line">sudo systemctl start nginx</span><br><span class="line">sudo systemctl enable nginx</span><br><span class="line">sudo systemctl status nginx</span><br><span class="line">sudo systemctl reload nginx</span><br><span class="line">sudo systemctl rstart nginx</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure></div><p>使用pm2 start</p><p>pm2 list</p><p>pm2 stop myblog</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hexo Abbrlink使用</title>
      <link href="/posts/2024/03/c6b1b407.html"/>
      <url>/posts/2024/03/c6b1b407.html</url>
      
        <content type="html"><![CDATA[<h1 id="hexo-abbrlink插件使用"><a class="markdownIt-Anchor" href="#hexo-abbrlink插件使用"></a> Hexo-abbrlink插件使用</h1><p><img src="https://telegraph-image.pages.dev/file/a98e5bffdc6b8db65f82b.jpg" alt="avatar" /></p><h4 id="1为了给hexo博客生成简洁唯一且url不变的链接我使用了hexo-abbrlink插件"><a class="markdownIt-Anchor" href="#1为了给hexo博客生成简洁唯一且url不变的链接我使用了hexo-abbrlink插件"></a> 1**.为了给Hexo博客生成简洁唯一且URL不变的链接，我使用了hexo-abbrlink插件：**</h4><div class="highlight-wrap" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-abbrlink --save</span><br></pre></td></tr></table></figure></div><h4 id="2对hexo根目录下_configyml进行修改"><a class="markdownIt-Anchor" href="#2对hexo根目录下_configyml进行修改"></a> 2.<strong>对Hexo根目录下_config.yml进行修改：</strong></h4><div class="highlight-wrap" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"># URL</span><br><span class="line">## Set your site url here.</span><br><span class="line">url: https://www.seyou.life</span><br><span class="line"># permalink: :year/:month/:day/:title/</span><br><span class="line">permalink: posts/:year/:month/:abbrlink.html  # 也可以直接写 posts/:abbrlink.html</span><br><span class="line"># abbrlink config</span><br><span class="line">abbrlink:</span><br><span class="line">  alg: crc32      #support crc16(default) and crc32</span><br><span class="line">  rep: hex        #support dec(default) and hex</span><br><span class="line">permalink_defaults:</span><br><span class="line">pretty_urls:</span><br><span class="line">  trailing_index: true # Set to false to remove trailing &#x27;index.html&#x27; from permalinks</span><br><span class="line">  trailing_html: true # Set to false to remove trailing &#x27;.html&#x27; from permalinks</span><br></pre></td></tr></table></figure></div><h4 id="3最后一定要执行"><a class="markdownIt-Anchor" href="#3最后一定要执行"></a> 3.<strong>最后一定要执行：</strong></h4><div class="highlight-wrap" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br></pre></td></tr></table></figure></div><h4 id="4一些问题"><a class="markdownIt-Anchor" href="#4一些问题"></a> 4.<strong>一些问题：</strong></h4><ul><li>**问题：**查看Xftp文章文件夹存在undefined，文件也变成undefind.html</li><li>**解决办法：**执行<code>hexo clean</code></li><li>**问题：**Nginx502 Bad gateway</li><li><strong>解决办法：</strong><code>hexo server</code></li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Let&#39;s Encrypt证书安装</title>
      <link href="/posts/2024/03/bc12509.html"/>
      <url>/posts/2024/03/bc12509.html</url>
      
        <content type="html"><![CDATA[<h1 id="lets-encrypt-证书安装"><a class="markdownIt-Anchor" href="#lets-encrypt-证书安装"></a> Let’s Encrypt 证书安装</h1><h3 id="使用第三方脚本"><a class="markdownIt-Anchor" href="#使用第三方脚本"></a> 使用第三方脚本</h3><ol><li><p><a href="http://xn--acme-ke9g492u.sh">安装acme.sh</a></p><ul><li><pre class="highlight"><code class="">curl https://get.acme.sh | sh -s email=my@example.com<div class="highlight-wrap" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">2. 使用alias命令创建别名</span><br><span class="line"></span><br><span class="line">   - ```</span><br><span class="line">     alias acme.sh=~/.acme.sh/acme.sh</span><br></pre></td></tr></table></figure></div></code></pre></li></ul></li><li><p>到安装目录下更新脚本</p><ul><li><pre class="highlight"><code class="">./acme.sh --upgrade<div class="highlight-wrap" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">4. 开启自动更新</span><br><span class="line"></span><br><span class="line">   - ```</span><br><span class="line">     ./acme.sh --upgrade --auto-upgrade</span><br></pre></td></tr></table></figure></div></code></pre></li></ul></li><li><p>生成证书</p><ul><li><pre class="highlight"><code class="">acme.sh --issue -d mydomain.com -d www.mydomain.com --webroot /home/wwwroot/mydomain.com/<div class="highlight-wrap" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">6. copy/安装证书</span><br><span class="line"></span><br></pre></td></tr></table></figure></div></code></pre></li></ul><p><a href="http://acme.sh">acme.sh</a> --install-cert -d <a href="http://example.com">example.com</a> <br />–key-file       /path/to/keyfile/in/nginx/key.pem  <br />–fullchain-file /path/to/fullchain/nginx/cert.pem <br />–reloadcmd     “service nginx force-reload”</p><div class="highlight-wrap" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">7. 查看已安装证书信息</span><br><span class="line"></span><br></pre></td></tr></table></figure></div><p><a href="http://acme.sh">acme.sh</a> --info -d <a href="http://example.com">example.com</a></p><pre class="highlight"><code class=""></code></pre></li><li><p>宝塔可以一键安装证书</p></li></ol>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Stable Diffusion</title>
      <link href="/posts/2024/03/fc385c23.html"/>
      <url>/posts/2024/03/fc385c23.html</url>
      
        <content type="html"><![CDATA[<h1 id="stable-diffusion"><a class="markdownIt-Anchor" href="#stable-diffusion"></a> Stable Diffusion</h1><h3 id="stable-diffusion-ai绘画"><a class="markdownIt-Anchor" href="#stable-diffusion-ai绘画"></a> Stable Diffusion AI绘画</h3><p><img src="https://typoraseyou.oss-cn-hongkong.aliyuncs.com/static/img/4%E6%9C%881%E6%97%A5%20%281%29-%E5%B0%81%E9%9D%A2.jpg" alt="AI生成" /></p><h3 id="背景知识"><a class="markdownIt-Anchor" href="#背景知识"></a> 背景知识</h3><ol><li>人工智能生成内容<ul><li>人工智能生成内容（Artificial Intelligence Generated Content，简称 AIGC）是当下最火的概念之一。AIGC 被认为是继专业生成内容（Professional Generated Content, PGC）和用户生成内容（User Generated Content, UGC）之后，利用人工智能技术自动生成内容的新型生产方式。</li></ul></li><li>Stable Diffusion<ul><li>Stable Diffusion 是一种扩散模型（Diffusion Model）的变体，称为“潜在扩散模型”（Latent Diffusion Model），由CompVis、Stability AI 和 LAION 的研究人员和工程师创建。它使用来自 LAION-5B 数据库子集的图像进行训练。使用这个模型，可以生成包括人脸在内的任何图像，因为有开源的预训练模型，所以我们也可以在自己的机器上运行它。Stable Diffusion 能够根据我们提供的一些提示词以及可以调整的部分参数，通过模型计算生成一张不错的图片。</li></ul></li></ol><h3 id="文字说明"><a class="markdownIt-Anchor" href="#文字说明"></a> 文字说明</h3><ol><li><p>安装基础工具</p><div class="highlight-wrap" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo yum install -y git conda mesa-libGL zlib-devel libjpeg-turbo-devel</span><br></pre></td></tr></table></figure></div></li><li><p>确认 Python 版本。</p><div class="highlight-wrap" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#以 Python 3.8 版本为例</span><br><span class="line">sudo yum install -y python38 python38-pip </span><br></pre></td></tr></table></figure></div></li><li><p>拉取 Stable Diffusion WebUI 代码。</p><div class="highlight-wrap" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># github 如果github访问被墙请采用gitee</span><br><span class="line">git clone https://github.com/AUTOMATIC1111/stable-diffusion-webui.git</span><br><span class="line"># gitee</span><br><span class="line">git clone https://gitee.com/developer-aliyun-com/stable-diffusion-webui.git</span><br></pre></td></tr></table></figure></div></li><li><p>进入代码目录</p><div class="highlight-wrap" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd stable-diffusion-webui</span><br></pre></td></tr></table></figure></div></li><li><p>安装项目依赖。</p><div class="highlight-wrap" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">pip3.8 install torch torchvision torchaudio --extra-index-url https://download.pytorch.org/whl/cu117</span><br><span class="line">pip3.8 install opencv-python-headless gfpgan open-clip-torch xformers pyngrok clip-anytorch</span><br><span class="line">pip3.8 install -r requirements_versions.txt</span><br></pre></td></tr></table></figure></div></li><li><p>启动 Stable Diffusion WebUI。</p><div class="highlight-wrap" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python3.8 launch.py --listen</span><br></pre></td></tr></table></figure></div></li><li><p>访问web页面</p><div class="highlight-wrap" data-rel="Plaintext"><figure class="iseeu highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://ip:7860</span><br></pre></td></tr></table></figure></div></li></ol><span id="more"></span><h3 id="成果展示"><a class="markdownIt-Anchor" href="#成果展示"></a> 成果展示</h3><img src="http://typoraseyou.oss-cn-hongkong.aliyuncs.com/static/img/00010-3943537200.png" alt="00010-3943537200" style="zoom:100%;" /><p><img src="http://typoraseyou.oss-cn-hongkong.aliyuncs.com/static/img/00001-1238557301.png" alt="00002-3289418864" /></p><p><img src="http://typoraseyou.oss-cn-hongkong.aliyuncs.com/static/img/00009-2792010388.png" alt="00001-1238557301" /></p><p><img src="http://typoraseyou.oss-cn-hongkong.aliyuncs.com/static/img/00000-1886411285.png" alt="00000-1886411285" /></p><p><img src="http://typoraseyou.oss-cn-hongkong.aliyuncs.com/static/img/00002-3289418864.png" alt="00009-2792010388" /></p><p><img src="http://typoraseyou.oss-cn-hongkong.aliyuncs.com/static/img/00008-1556040907.png" alt="00008-1556040907" /></p><p><img src="http://typoraseyou.oss-cn-hongkong.aliyuncs.com/static/img/00006-3316726984.png" alt="00007-901757382" /></p><p><img src="http://typoraseyou.oss-cn-hongkong.aliyuncs.com/static/img/00007-901757382.png" alt="00006-3316726984(1)" /></p><p><img src="http://typoraseyou.oss-cn-hongkong.aliyuncs.com/static/img/00005-3131953369.png" alt="00006-3316726984" /></p><p><img src="http://typoraseyou.oss-cn-hongkong.aliyuncs.com/static/img/00006-3316726984(1).png" alt="00005-3131953369" /></p><p><img src="http://typoraseyou.oss-cn-hongkong.aliyuncs.com/static/img/00003-1033096148.png" alt="00004-2193222042" /></p><p><img src="http://typoraseyou.oss-cn-hongkong.aliyuncs.com/static/img/00004-2193222042.png" alt="00003-1033096148" /></p><h3 id="关键词推荐"><a class="markdownIt-Anchor" href="#关键词推荐"></a> 关键词推荐</h3><ul><li><p>魔咒百科词典</p><ul><li><p><a href="https://aitag.top/">https://aitag.top/</a></p></li><li><iframe height=360 width=480 src="//player.bilibili.com/player.html?aid=604055410" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" high_quality="1" sandbox=“allow-top-navigation allow-same-origin allow-forms allow-scripts” width="100%" height="500" muted="true"> </iframe></li></ul></li><li><p>鳖哲法典</p><ul><li><p><a href="http://tomxlysplay.com.cn/#/">http://tomxlysplay.com.cn/#/</a></p></li><li><iframe height=360 width=480 src="//player.bilibili.com/player.html?aid=304647657" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"> </iframe></li><li><p><strong>Github</strong> : <a href="https://github.com/Chuchuwen9637/noveaitag">Noveaitag</a></p></li><li><p>模型网址：<a href="https://civitai.com/tag/lora?spm=a2c6h.13858378.0.0.e75653b7lspwLm">https://civitai.com/tag/lora?spm=a2c6h.13858378.0.0.e75653b7lspwLm</a></p></li></ul></li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>zmy</title>
      <link href="/posts/2024/03/5fade8e6.html"/>
      <url>/posts/2024/03/5fade8e6.html</url>
      
        <content type="html"><![CDATA[<h1 id="初级java工程师面试基础知识"><a class="markdownIt-Anchor" href="#初级java工程师面试基础知识"></a> 初级Java工程师面试基础知识</h1><ol><li>Java是什么？它有哪些特点？<ul><li>Java是一种面向对象的编程语言，具有跨平台、可移植性和高性能的特点。</li></ul></li><li>什么是Java虚拟机（JVM）？<ul><li>JVM是Java程序的运行环境，它负责将Java字节码翻译成机器码并执行。</li></ul></li><li>Java中的基本数据类型有哪些？<ul><li>Java中的基本数据类型包括整数类型（byte、short、int、long）、浮点数类型（float、double）、字符类型（char）、布尔类型（boolean）。</li></ul></li><li>Java中的包是什么？有什么作用？<ul><li>包是Java中用于组织类和接口的一种方式，它可以避免命名冲突和提供更好的代码管理和复用。</li></ul></li><li>什么是面向对象编程（OOP）？<ul><li>面向对象编程是一种编程范式，它将数据和操作数据的方法封装在一起，通过创建对象来实现程序的设计和开发。</li></ul></li><li>Java中的继承是什么？有什么作用？<ul><li>继承是一种机制，它允许一个类继承另一个类的属性和方法。通过继承，可以实现代码的重用和扩展。</li></ul></li><li>什么是多态性（Polymorphism）？<ul><li>多态性是指同一种操作可以作用于不同的对象，并根据对象的实际类型执行不同的操作。</li></ul></li></ol>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>bilibili</title>
      <link href="/posts/2024/03/29d999f4.html"/>
      <url>/posts/2024/03/29d999f4.html</url>
      
        <content type="html"><![CDATA[<h3 id="pokemon-music"><a class="markdownIt-Anchor" href="#pokemon-music"></a> Pokemon Music</h3><iframe height=360 width=480 src="//player.bilibili.com/player.html?aid=310450474" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"> </iframe>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>music</title>
      <link href="/posts/2024/03/cd52224a.html"/>
      <url>/posts/2024/03/cd52224a.html</url>
      
        <content type="html"><![CDATA[<h1 id="网易云"><a class="markdownIt-Anchor" href="#网易云"></a> 网易云</h1><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width=330 height=86 src="//music.163.com/outchain/player?type=2&id=1846473653&auto=1&height=66"></iframe>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
